const brokerUrl = "wss://192.168.0.105:9001"; // WebSocket-–ø–æ—Ä—Ç
const topic = "ai/command"; // –¢–æ–ø–∏–∫ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±—Ä–æ–∫–µ—Ä—É MQTT
const client = mqtt.connect(brokerUrl, {
    protocol: 'mqtt' // –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º WebSocket
});

client.on("connect", () => {
    console.log("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MQTT!");
    client.subscribe(topic, (err) => {
        if (err) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–ø–∏—Å–∫–µ:", err);
        } else {
            console.log(`üì• –ü–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Ç–æ–ø–∏–∫ ${topic}`);
        }
    });
});

client.on("error", (err) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ MQTT:", err);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
client.on("message", (topic, message) => {
    console.log(`üì• –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: ${message.toString()} –≤ —Ç–æ–ø–∏–∫–µ ${topic}`);
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –∑–¥–µ—Å—å
});

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è)
function sendMessage(message) {
    if (client.connected) {
        client.publish(topic, message, (err) => {
            if (err) {
                console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", err);
            } else {
                console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${message}`);
            }
        });
    } else {
        console.error("‚ö†Ô∏è MQTT –Ω–µ –ø–æ–¥–∫–ª—é—á—ë–Ω! –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.");
    }
}

document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll('.device-button').forEach(button => {
        const deviceNumber = button.getAttribute('data-led-id'); // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –∞—Ç—Ä–∏–±—É—Ç–∞
        const isActive = localStorage.getItem(`device-${deviceNumber}`) === "true";

        if (isActive) {
            button.classList.add('active'); // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        }

        button.addEventListener('click', () => {
            button.classList.toggle('active');
            const newState = button.classList.contains('active');

            localStorage.setItem(`device-${deviceNumber}`, newState); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ

            const command = newState ? "turn_on_led_strip" : "turn_off_led_strip";

            const message = JSON.stringify({
                commands: [{ group: "led_strip", command: command, number: deviceNumber }]
            });

            sendMessage(message); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º MQTT –∫–æ–º–∞–Ω–¥—É
        });
    });
});
